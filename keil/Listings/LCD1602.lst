C51 COMPILER V9.54   LCD1602                                                               04/28/2021 09:04:58 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: E:\embeded\Keil_v5\C51\BIN\C51.EXE E:\OneDrive\OneDrive - whu.edu.cn\Desktop\程序源码\KeilProje
                    -ct\5-2 LCD1602调试工具\LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LCD1602.lst) OBJECT(.\
                    -Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "status.h"
   3          
   4          //引脚配置：
   5          sbit LCD_RS = P2 ^ 6;
   6          // sbit LCD_RW = P2 ^ 1;
   7          sbit LCD_EN = P2 ^ 7;
   8          #define LCD_DataPort P0
   9          
  10          void customArrows();
  11          void initStatus();
  12          
  13          //函数定义：
  14          /**
  15            * @brief  LCD1602延时函数，12MHz调用可延时1ms
  16            * @param  无
  17            * @retval 无
  18            */
  19          void LCD_Delay()
  20          {
  21   1        unsigned char i, j;
  22   1      
  23   1        i = 2;
  24   1        j = 239;
  25   1        do
  26   1        {
  27   2          while (--j)
  28   2            ;
  29   2        } while (--i);
  30   1      }
  31          
  32          /**
  33            * @brief  LCD1602写命令
  34            * @param  Command 要写入的命令
  35            * @retval 无
  36            */
  37          void LCD_WriteCommand(unsigned char Command)
  38          {
  39   1        LCD_RS = 0;
  40   1        // LCD_RW=0;
  41   1        LCD_DataPort = Command;
  42   1        LCD_EN = 1;
  43   1        LCD_Delay();
  44   1        LCD_EN = 0;
  45   1        LCD_Delay();
  46   1      }
  47          
  48          /**
  49            * @brief  LCD1602写数据
  50            * @param  Data 要写入的数据
  51            * @retval 无
  52            */
  53          void LCD_WriteData(unsigned char Data)
C51 COMPILER V9.54   LCD1602                                                               04/28/2021 09:04:58 PAGE 2   

  54          {
  55   1        LCD_RS = 1;
  56   1        // LCD_RW=0;
  57   1        LCD_DataPort = Data;
  58   1        LCD_EN = 1;
  59   1        LCD_Delay();
  60   1        LCD_EN = 0;
  61   1        LCD_Delay();
  62   1      }
  63          
  64          /**
  65            * @brief  LCD1602设置光标位置
  66            * @param  Line 行位置，范围：1~2
  67            * @param  Column 列位置，范围：1~16
  68            * @retval 无
  69            */
  70          void LCD_SetCursor(unsigned char Line, unsigned char Column)
  71          {
  72   1        if (Line == 1)
  73   1        {
  74   2          LCD_WriteCommand(0x80 | (Column - 1));
  75   2        }
  76   1        else if (Line == 2)
  77   1        {
  78   2          LCD_WriteCommand(0x80 | (Column - 1 + 0x40));
  79   2        }
  80   1      }
  81          
  82          /**
  83            * @brief  LCD1602初始化函数
  84            * @param  无
  85            * @retval 无
  86            */
  87          void LCD_Init()
  88          {
  89   1        LCD_WriteCommand(0x38); //八位数据接口，两行显示，5*7点阵
  90   1        LCD_WriteCommand(0x0c); //显示开，光标关，闪烁关
  91   1        LCD_WriteCommand(0x06); //数据读写操作后，光标自动加一，画面不动
  92   1        LCD_WriteCommand(0x01); //光标复位，清屏
  93   1        customArrows();
  94   1      }
  95          
  96          /**
  97            * @brief  在LCD1602指定位置上显示一个字符
  98            * @param  Line 行位置，范围：1~2
  99            * @param  Column 列位置，范围：1~16
 100            * @param  Char 要显示的字符
 101            * @retval 无
 102            */
 103          void LCD_ShowChar(unsigned char Line, unsigned char Column, char Char)
 104          {
 105   1        LCD_SetCursor(Line, Column);
 106   1        LCD_WriteData(Char);
 107   1      }
 108          
 109          /**
 110            * @brief  在LCD1602指定位置开始显示所给字符串
 111            * @param  Line 起始行位置，范围：1~2
 112            * @param  Column 起始列位置，范围：1~16
 113            * @param  String 要显示的字符串
 114            * @retval 无
 115            */
C51 COMPILER V9.54   LCD1602                                                               04/28/2021 09:04:58 PAGE 3   

 116          void LCD_ShowString(unsigned char Line, unsigned char Column, char *String)
 117          {
 118   1        unsigned char i;
 119   1        LCD_SetCursor(Line, Column);
 120   1        for (i = 0; String[i] != '\0'; i++)
 121   1        {
 122   2          LCD_WriteData(String[i]);
 123   2        }
 124   1      }
 125          
 126          /**
 127            * @brief  返回值=X的Y次方
 128            */
 129          int LCD_Pow(int X, int Y)
 130          {
 131   1        unsigned char i;
 132   1        int Result = 1;
 133   1        for (i = 0; i < Y; i++)
 134   1        {
 135   2          Result *= X;
 136   2        }
 137   1        return Result;
 138   1      }
 139          
 140          /**
 141            * @brief  在LCD1602指定位置开始显示所给数字
 142            * @param  Line 起始行位置，范围：1~2
 143            * @param  Column 起始列位置，范围：1~16
 144            * @param  Number 要显示的数字，范围：0~65535
 145            * @param  Length 要显示数字的长度，范围：1~5
 146            * @retval 无
 147            */
 148          void LCD_ShowNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 149          {
 150   1        unsigned char i;
 151   1        LCD_SetCursor(Line, Column);
 152   1        for (i = Length; i > 0; i--)
 153   1        {
 154   2          LCD_WriteData(Number / LCD_Pow(10, i - 1) % 10 + '0');
 155   2        }
 156   1      }
 157          
 158          /**
 159            * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 160            * @param  Line 起始行位置，范围：1~2
 161            * @param  Column 起始列位置，范围：1~16
 162            * @param  Number 要显示的数字，范围：-32768~32767
 163            * @param  Length 要显示数字的长度，范围：1~5
 164            * @retval 无
 165            */
 166          void LCD_ShowSignedNum(unsigned char Line, unsigned char Column, int Number, unsigned char Length)
 167          {
 168   1        unsigned char i;
 169   1        unsigned int Number1;
 170   1        LCD_SetCursor(Line, Column);
 171   1        if (Number >= 0)
 172   1        {
 173   2          LCD_WriteData('+');
 174   2          Number1 = Number;
 175   2        }
 176   1        else
 177   1        {
C51 COMPILER V9.54   LCD1602                                                               04/28/2021 09:04:58 PAGE 4   

 178   2          LCD_WriteData('-');
 179   2          Number1 = -Number;
 180   2        }
 181   1        for (i = Length; i > 0; i--)
 182   1        {
 183   2          LCD_WriteData(Number1 / LCD_Pow(10, i - 1) % 10 + '0');
 184   2        }
 185   1      }
 186          
 187          /**
 188            * @brief  在LCD1602指定位置开始以十六进制显示所给数字
 189            * @param  Line 起始行位置，范围：1~2
 190            * @param  Column 起始列位置，范围：1~16
 191            * @param  Number 要显示的数字，范围：0~0xFFFF
 192            * @param  Length 要显示数字的长度，范围：1~4
 193            * @retval 无
 194            */
 195          void LCD_ShowHexNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 196          {
 197   1        unsigned char i, SingleNumber;
 198   1        LCD_SetCursor(Line, Column);
 199   1        for (i = Length; i > 0; i--)
 200   1        {
 201   2          SingleNumber = Number / LCD_Pow(16, i - 1) % 16;
 202   2          if (SingleNumber < 10)
 203   2          {
 204   3            LCD_WriteData(SingleNumber + '0');
 205   3          }
 206   2          else
 207   2          {
 208   3            LCD_WriteData(SingleNumber - 10 + 'A');
 209   3          }
 210   2        }
 211   1      }
 212          
 213          /**
 214            * @brief  在LCD1602指定位置开始以二进制显示所给数字
 215            * @param  Line 起始行位置，范围：1~2
 216            * @param  Column 起始列位置，范围：1~16
 217            * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 218            * @param  Length 要显示数字的长度，范围：1~16
 219            * @retval 无
 220            */
 221          void LCD_ShowBinNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 222          {
 223   1        unsigned char i;
 224   1        LCD_SetCursor(Line, Column);
 225   1        for (i = Length; i > 0; i--)
 226   1        {
 227   2          LCD_WriteData(Number / LCD_Pow(2, i - 1) % 2 + '0');
 228   2        }
 229   1      }
 230          
 231          code unsigned char upSign[] = {
 232              0x04,
 233              0x0E,
 234              0x15,
 235              0x04,
 236              0x04,
 237              0x04,
 238              0x04,
 239              0x04,
C51 COMPILER V9.54   LCD1602                                                               04/28/2021 09:04:58 PAGE 5   

 240          };
 241          code unsigned char downSign[] = {
 242              0x04,
 243              0x04,
 244              0x04,
 245              0x04,
 246              0x04,
 247              0x15,
 248              0x0E,
 249              0x04,
 250          };
 251          code unsigned char stillSign[] = {0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00};
 252          
 253          void customArrows()
 254          {
 255   1        unsigned int i;
 256   1        LCD_WriteCommand(0x40);
 257   1        for (i = 0; i < 8; i++)
 258   1        {
 259   2          LCD_WriteData(upSign[i]);
 260   2        }
 261   1        LCD_WriteCommand(0x48);
 262   1        for (i = 0; i < 8; i++)
 263   1        {
 264   2          LCD_WriteData(downSign[i]);
 265   2        }
 266   1        LCD_WriteCommand(0x50);
 267   1        for (i = 0; i < 8; i++)
 268   1        {
 269   2          LCD_WriteData(stillSign[i]);
 270   2        }
 271   1      }
 272          
 273          void showStatus(unsigned int side, unsigned int status, unsigned int floor)
 274          {
 275   1        switch (side)
 276   1        {
 277   2        case LEFT:
 278   2          LCD_SetCursor(1, 3);
 279   2          LCD_WriteData(status);
 280   2          LCD_ShowNum(1, 4, (int)floor, 2);
 281   2          break;
 282   2        case RIGHT:
 283   2          LCD_SetCursor(1, 12);
 284   2          LCD_WriteData(status);
 285   2          LCD_ShowNum(1, 13, (int)floor, 2);
 286   2          break;
 287   2        }
 288   1      }
 289          
 290          void initStatus()
 291          {
 292   1        showStatus(LEFT, STILL, 1);
 293   1        showStatus(RIGHT, STILL, 1);
 294   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    581    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.54   LCD1602                                                               04/28/2021 09:04:58 PAGE 6   

   DATA SIZE        =   ----      33
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
