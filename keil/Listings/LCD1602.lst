C51 COMPILER V9.54   LCD1602                                                               04/27/2021 17:19:42 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: E:\embeded\Keil_v5\C51\BIN\C51.EXE E:\OneDrive\OneDrive - whu.edu.cn\Desktop\程序源码\KeilProje
                    -ct\5-2 LCD1602调试工具\LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LCD1602.lst) OBJECT(.\
                    -Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "status.h"
   3          #include <INTRINS.H>
   4          
   5          //引脚配置：
   6          sbit LCD_RS = P2 ^ 6;
   7          // sbit LCD_RW = P2 ^ 1;
   8          sbit LCD_EN = P2 ^ 7;
   9          #define LCD_DataPort P0
  10          
  11          void customArrows();
  12          void initStatus();
  13          
  14          //函数定义：
  15          /**
  16            * @brief  LCD1602延时函数，12MHz调用可延时1ms
  17            * @param  无
  18            * @retval 无
  19            */
  20          void LCD_Delay()
  21          {
  22   1        unsigned char i, j;
  23   1      
  24   1        i = 2;
  25   1        j = 239;
  26   1        do
  27   1        {
  28   2          while (--j)
  29   2            ;
  30   2        } while (--i);
  31   1      }
  32          
  33          /**
  34            * @brief  LCD1602写命令
  35            * @param  Command 要写入的命令
  36            * @retval 无
  37            */
  38          void LCD_WriteCommand(unsigned char Command)
  39          {
  40   1              LCD_RS=0;
  41   1              // LCD_RW=0;
  42   1              LCD_DataPort=Command;
  43   1              LCD_EN=1;
  44   1              LCD_Delay();
  45   1              LCD_EN=0;
  46   1              LCD_Delay();
  47   1      }
  48          
  49          /**
  50            * @brief  LCD1602写数据
  51            * @param  Data 要写入的数据
  52            * @retval 无
  53            */
C51 COMPILER V9.54   LCD1602                                                               04/27/2021 17:19:42 PAGE 2   

  54          void LCD_WriteData(unsigned char Data)
  55          {
  56   1              LCD_RS=1;
  57   1              // LCD_RW=0;
  58   1              LCD_DataPort=Data;
  59   1              LCD_EN=1;
  60   1              LCD_Delay();
  61   1              LCD_EN=0;
  62   1              LCD_Delay();
  63   1      }
  64          
  65          /**
  66            * @brief  LCD1602设置光标位置
  67            * @param  Line 行位置，范围：1~2
  68            * @param  Column 列位置，范围：1~16
  69            * @retval 无
  70            */
  71          void LCD_SetCursor(unsigned char Line, unsigned char Column)
  72          {
  73   1        if (Line == 1)
  74   1        {
  75   2          LCD_WriteCommand(0x80 | (Column - 1));
  76   2        }
  77   1        else if (Line == 2)
  78   1        {
  79   2          LCD_WriteCommand(0x80 | (Column - 1 + 0x40));
  80   2        }
  81   1      }
  82          
  83          /**
  84            * @brief  LCD1602初始化函数
  85            * @param  无
  86            * @retval 无
  87            */
  88          void LCD_Init()
  89          {
  90   1        LCD_WriteCommand(0x38); //八位数据接口，两行显示，5*7点阵
  91   1        LCD_WriteCommand(0x0c); //显示开，光标关，闪烁关
  92   1        LCD_WriteCommand(0x06); //数据读写操作后，光标自动加一，画面不动
  93   1        LCD_WriteCommand(0x01); //光标复位，清屏
  94   1        customArrows();
  95   1      }
  96          
  97          /**
  98            * @brief  在LCD1602指定位置上显示一个字符
  99            * @param  Line 行位置，范围：1~2
 100            * @param  Column 列位置，范围：1~16
 101            * @param  Char 要显示的字符
 102            * @retval 无
 103            */
 104          void LCD_ShowChar(unsigned char Line, unsigned char Column, char Char)
 105          {
 106   1        LCD_SetCursor(Line, Column);
 107   1        LCD_WriteData(Char);
 108   1      }
 109          
 110          /**
 111            * @brief  在LCD1602指定位置开始显示所给字符串
 112            * @param  Line 起始行位置，范围：1~2
 113            * @param  Column 起始列位置，范围：1~16
 114            * @param  String 要显示的字符串
 115            * @retval 无
C51 COMPILER V9.54   LCD1602                                                               04/27/2021 17:19:42 PAGE 3   

 116            */
 117          void LCD_ShowString(unsigned char Line, unsigned char Column, char *String)
 118          {
 119   1        unsigned char i;
 120   1        LCD_SetCursor(Line, Column);
 121   1        for (i = 0; String[i] != '\0'; i++)
 122   1        {
 123   2          LCD_WriteData(String[i]);
 124   2        }
 125   1      }
 126          
 127          /**
 128            * @brief  返回值=X的Y次方
 129            */
 130          int LCD_Pow(int X, int Y)
 131          {
 132   1        unsigned char i;
 133   1        int Result = 1;
 134   1        for (i = 0; i < Y; i++)
 135   1        {
 136   2          Result *= X;
 137   2        }
 138   1        return Result;
 139   1      }
 140          
 141          /**
 142            * @brief  在LCD1602指定位置开始显示所给数字
 143            * @param  Line 起始行位置，范围：1~2
 144            * @param  Column 起始列位置，范围：1~16
 145            * @param  Number 要显示的数字，范围：0~65535
 146            * @param  Length 要显示数字的长度，范围：1~5
 147            * @retval 无
 148            */
 149          void LCD_ShowNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 150          {
 151   1        unsigned char i;
 152   1        LCD_SetCursor(Line, Column);
 153   1        for (i = Length; i > 0; i--)
 154   1        {
 155   2          LCD_WriteData(Number / LCD_Pow(10, i - 1) % 10 + '0');
 156   2        }
 157   1      }
 158          
 159          /**
 160            * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 161            * @param  Line 起始行位置，范围：1~2
 162            * @param  Column 起始列位置，范围：1~16
 163            * @param  Number 要显示的数字，范围：-32768~32767
 164            * @param  Length 要显示数字的长度，范围：1~5
 165            * @retval 无
 166            */
 167          void LCD_ShowSignedNum(unsigned char Line, unsigned char Column, int Number, unsigned char Length)
 168          {
 169   1        unsigned char i;
 170   1        unsigned int Number1;
 171   1        LCD_SetCursor(Line, Column);
 172   1        if (Number >= 0)
 173   1        {
 174   2          LCD_WriteData('+');
 175   2          Number1 = Number;
 176   2        }
 177   1        else
C51 COMPILER V9.54   LCD1602                                                               04/27/2021 17:19:42 PAGE 4   

 178   1        {
 179   2          LCD_WriteData('-');
 180   2          Number1 = -Number;
 181   2        }
 182   1        for (i = Length; i > 0; i--)
 183   1        {
 184   2          LCD_WriteData(Number1 / LCD_Pow(10, i - 1) % 10 + '0');
 185   2        }
 186   1      }
 187          
 188          /**
 189            * @brief  在LCD1602指定位置开始以十六进制显示所给数字
 190            * @param  Line 起始行位置，范围：1~2
 191            * @param  Column 起始列位置，范围：1~16
 192            * @param  Number 要显示的数字，范围：0~0xFFFF
 193            * @param  Length 要显示数字的长度，范围：1~4
 194            * @retval 无
 195            */
 196          void LCD_ShowHexNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 197          {
 198   1        unsigned char i, SingleNumber;
 199   1        LCD_SetCursor(Line, Column);
 200   1        for (i = Length; i > 0; i--)
 201   1        {
 202   2          SingleNumber = Number / LCD_Pow(16, i - 1) % 16;
 203   2          if (SingleNumber < 10)
 204   2          {
 205   3            LCD_WriteData(SingleNumber + '0');
 206   3          }
 207   2          else
 208   2          {
 209   3            LCD_WriteData(SingleNumber - 10 + 'A');
 210   3          }
 211   2        }
 212   1      }
 213          
 214          /**
 215            * @brief  在LCD1602指定位置开始以二进制显示所给数字
 216            * @param  Line 起始行位置，范围：1~2
 217            * @param  Column 起始列位置，范围：1~16
 218            * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 219            * @param  Length 要显示数字的长度，范围：1~16
 220            * @retval 无
 221            */
 222          void LCD_ShowBinNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
 223          {
 224   1        unsigned char i;
 225   1        LCD_SetCursor(Line, Column);
 226   1        for (i = Length; i > 0; i--)
 227   1        {
 228   2          LCD_WriteData(Number / LCD_Pow(2, i - 1) % 2 + '0');
 229   2        }
 230   1      }
 231          
 232          code unsigned char upSign[] = {
 233              0x04,
 234              0x0E,
 235              0x15,
 236              0x04,
 237              0x04,
 238              0x04,
 239              0x04,
C51 COMPILER V9.54   LCD1602                                                               04/27/2021 17:19:42 PAGE 5   

 240              0x04,
 241          };
 242          code unsigned char downSign[] = {
 243              0x04,
 244              0x04,
 245              0x04,
 246              0x04,
 247              0x04,
 248              0x15,
 249              0x0E,
 250              0x04,
 251          };
 252          code unsigned char stillSign[] = {0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00};
 253          
 254          void customArrows()
 255          {
 256   1        unsigned int i;
 257   1        LCD_WriteCommand(0x40);
 258   1        for (i = 0; i < 8; i++)
 259   1        {
 260   2          LCD_WriteData(upSign[i]);
 261   2        }
 262   1        LCD_WriteCommand(0x48);
 263   1        for (i = 0; i < 8; i++)
 264   1        {
 265   2          LCD_WriteData(downSign[i]);
 266   2        }
 267   1        LCD_WriteCommand(0x50);
 268   1        for (i = 0; i < 8; i++)
 269   1        {
 270   2          LCD_WriteData(stillSign[i]);
 271   2        }
 272   1      }
 273          
 274          void showStatus(unsigned int side, unsigned int status, unsigned int floor)
 275          {
 276   1        switch (side)
 277   1        {
 278   2        case LEFT:
 279   2          LCD_SetCursor(1, 3);
 280   2          LCD_WriteData(status);
 281   2          LCD_ShowNum(1, 4, (int)floor, 2);
 282   2          break;
 283   2        case RIGHT:
 284   2          LCD_SetCursor(1, 12);
 285   2          LCD_WriteData(status);
 286   2          LCD_ShowNum(1, 13, (int)floor, 2);
 287   2          break;
 288   2        }
 289   1      }
 290          
 291          void initStatus()
 292          {
 293   1        showStatus(LEFT, STILL, 1);
 294   1        showStatus(RIGHT, STILL, 1);
 295   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    581    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.54   LCD1602                                                               04/27/2021 17:19:42 PAGE 6   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      33
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
