C51 COMPILER V9.54   MAIN                                                                  04/30/2021 17:52:46 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\embeded\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "delay.h"
   3          #include "LCD1602.h"
   4          #include "status.h"
   5          
   6          #define uchar unsigned char
   7          #define uint unsigned int
   8          
   9          void init();
  10          
  11          void showElevStatus();
  12          
  13          void onButtonClick();
  14          
  15          void two2FourDecode(uchar flagEl, uchar flagEr, uchar flagUp, uchar flagDown);
  16          
  17          int hasUpRequest(int request, int floor);
  18          
  19          int hasDownRequest(int request, int floor);
  20          
  21          int clearBit(int num, int pos);
  22          
  23          int setBit(int num, int pos);
  24          
  25          void showIndicators();
  26          
  27          void elevatorSche();
  28          
  29          typedef struct Elevator {
  30              uint index;
  31              uint floor;
  32              uint status;
  33          } Elev;
  34          
  35          Elev leftElev, rightElev;
  36          uchar el = 0, er = 0, up = 0, down = 0;
  37          
  38          void main() {
  39   1          uint k;
  40   1          init();
  41   1          while (1) {
  42   2              onButtonClick();
  43   2      
  44   2              elevatorSche();
  45   2      
  46   2              for (k = 0; k < 128; k++) {
  47   3                  onButtonClick();
  48   3              }
  49   2          }
  50   1      }
  51          
  52          void init() {
  53   1          // ÂàùÂßãÂåñLCDÊòæÁ§∫Â±è
  54   1          LCD_Init();
C51 COMPILER V9.54   MAIN                                                                  04/30/2021 17:52:46 PAGE 2   

  55   1      
  56   1          // ÂàùÂßãÂåñÂ∑¶ËæπÁîµÊ¢Ø
  57   1          leftElev.index = LEFT;
  58   1          leftElev.floor = 1;
  59   1          leftElev.status = STILL;
  60   1          // ÂàùÂßãÂåñÂè≥ËæπÁîµÊ¢Ø
  61   1          rightElev.index = RIGHT;
  62   1          rightElev.floor = 1;
  63   1          rightElev.status = STILL;
  64   1          showElevStatus();
  65   1      }
  66          
  67          void showElevStatus() {
  68   1          // ÊòæÁ§∫Â∑¶ÁîµÊ¢ØÁä∂ÊÄÅÂíåÊ•ºÂ±Ç
  69   1          LCD_SetCursor(1, 3);
  70   1          LCD_WriteData(leftElev.status);     // ÊòæÁ§∫Ëá™ÂÆö‰πâÂ≠óÁ¨¶‰ΩçÁΩÆ
  71   1          LCD_ShowNum(1, 4, leftElev.floor, 2);
  72   1      
  73   1          LCD_SetCursor(1, 12);
  74   1          LCD_WriteData(rightElev.status);
  75   1          LCD_ShowNum(1, 13, rightElev.floor, 2);
  76   1      }
  77          
  78          void onButtonClick() {
  79   1          // Â¶ÇÊûúP1_7È´òÁîµÂπ≥ÔºåÈÄöËøá8-3ÁºñÁ†ÅÂô®ÂæóÂà∞ÊåâÈîÆÊï∞ÂÄº
  80   1          if (P1_7) {
  81   2              el |= (1 << ((P1_6 * 4) | (P1_5 * 2) | P1_4));
  82   2          }
  83   1      
  84   1          if (P3_7) {
  85   2              er |= (1 << ((P3_6 * 4) | (P3_5 * 2) | P3_4));
  86   2          }
  87   1      
  88   1          if (P1_3) {
  89   2              up |= (1 << ((P1_2 * 4) | (P1_1 * 2) | P1_0));
  90   2          }
  91   1      
  92   1          if (P3_3) {
  93   2              down |= (1 << ((P3_2 * 4) | (P3_1 * 2) | P3_0));
  94   2          }
  95   1      
  96   1          // ÁÇπ‰∫ÆÂØπÂ∫îÁöÑÊåáÁ§∫ÁÅØ
  97   1          showIndicators();
  98   1      }
  99          
 100          void showIndicators() {
 101   1          uchar i;
 102   1          for (i = 0; i < 8; i++) {
 103   2              // ÁªôP2‰Ωé‰∏â‰ΩçËµãÊåâÈîÆ‰ΩçÁΩÆÂÄº
 104   2              P2_0 = i & 0x01;
 105   2              P2_1 = i & 0x02;
 106   2              P2_2 = i & 0x04;
 107   2      
 108   2              // ÈÄöËøá2-4ËØëÁ†ÅÂô®‰ΩøËÉΩÂØπÂ∫îÁöÑ3-8ËØëÁ†ÅÂô®ÔºåÁÇπ‰∫ÆÂØπÂ∫îÁöÑÊåáÁ§∫ÁÅØ
 109   2              two2FourDecode(
 110   2                      (el >> i) & 0x01,
 111   2                      (er >> i) & 0x01,
 112   2                      (up >> i) & 0x01,
 113   2                      (down >> i) & 0x01
 114   2              );
 115   2          }
 116   1      }
C51 COMPILER V9.54   MAIN                                                                  04/30/2021 17:52:46 PAGE 3   

 117          
 118          void updateIndicators() {
 119   1          if (leftElev.status == UP) {
 120   2              up = clearBit(up, leftElev.floor);
 121   2              el = clearBit(el, leftElev.floor);
 122   2      
 123   2              // ÊòØ‰∏∫‰∫ÜÊé•Âà∞ÊúÄÈ´òÊ•ºÂ±ÇÁöÑÂêë‰∏ã‰∫∫ÂëòËÄåÂ§Ñ‰∫é‰∏äÂçáÁöÑÁä∂ÊÄÅÔºåËÄå‰∏îÂΩìÂâçÊ•ºÂ±ÇÊòØÂêë‰∏
             -ã‰∫∫Âëò‰∏≠ÁöÑÊúÄÈ´òÂ±Ç
 124   2              if (hasUpRequest(el, leftElev.floor) <= 0 && hasUpRequest(up, leftElev.floor) <= 0 &&
 125   2                  hasUpRequest(down, leftElev.floor) <= 0) {
 126   3                  down = clearBit(down, leftElev.floor);
 127   3              }
 128   2          } else if (leftElev.status == DOWN) {
 129   2              down = clearBit(down, leftElev.floor);
 130   2              el = clearBit(el, leftElev.floor);
 131   2      
 132   2              //‰∏∫‰∫ÜÊé•Âà∞ÊúÄ‰ΩéÊ•ºÂ±ÇÁöÑÂêë‰∏ä‰∫∫ÂëòÔºåËÄå‰∏îÂΩìÂâçÊ•ºÂ±ÇÊòØÂêë‰∏ä‰∫∫Âëò‰∏≠ÁöÑÊúÄÂ∫ïÂ±Ç
 133   2              if (hasDownRequest(el, leftElev.floor) <= 0 && hasDownRequest(down, leftElev.floor) <= 0 &&
 134   2                  hasDownRequest(up, leftElev.floor) <= 0) {
 135   3                  up = clearBit(up, leftElev.floor);
 136   3              }
 137   2          }
 138   1      
 139   1          if (rightElev.status == UP) {
 140   2              up = clearBit(up, rightElev.floor);
 141   2              er = clearBit(er, rightElev.floor);
 142   2      
 143   2              // ‰∏∫‰∫ÜÊé•Âà∞ÊúÄÈ´òÊ•ºÂ±ÇÁöÑÂêë‰∏ä‰∫∫ÂëòËÄåÂ§Ñ‰∫éÂêë‰∏äÁöÑÁä∂ÊÄÅÔºåËÄå‰∏îÂΩìÂâçÊ•ºÂ±ÇÊòØÂêë‰∏ã‰∫
             -∫Âëò‰∏≠ÁöÑÊúÄÈ´òÂ±Ç
 144   2              if (hasUpRequest(el, rightElev.floor) <= 0 && hasUpRequest(up, rightElev.floor) <= 0 &&
 145   2                  hasUpRequest(down, rightElev.floor) <= 0) {
 146   3                  down = clearBit(down, rightElev.floor);
 147   3              }
 148   2          } else if (rightElev.status == DOWN) {
 149   2              down = clearBit(down, rightElev.floor);
 150   2              er = clearBit(er, rightElev.floor);
 151   2      
 152   2              // ‰∏∫‰∫ÜÊé•Âà∞ÊúÄ‰ΩéÊ•ºÂ±ÇÁöÑÂêë‰∏ä‰∫∫ÂëòÔºåËÄå‰∏îÂΩìÂâçÊ•ºÂ±ÇÊòØÂêë‰∏ä‰∫∫Âëò‰∏≠ÁöÑÊúÄÂ∫ïÂ±Ç
 153   2              if (hasDownRequest(el, rightElev.floor) <= 0 && hasDownRequest(down, rightElev.floor) <= 0 &&
 154   2                  hasDownRequest(up, rightElev.floor) <= 0) {
 155   3                  up = clearBit(up, rightElev.floor);
 156   3              }
 157   2          }
 158   1      }
 159          
 160          void two2FourDecode(uchar flagEl, uchar flagEr, uchar flagUp, uchar flagDown) {
 161   1          if (flagEl) {
 162   2              P2_3 = 0;
 163   2              P2_4 = 0;
 164   2              P2_5 = 0;
 165   2              delay(1);
 166   2          }
 167   1          if (flagEr) {
 168   2              P2_3 = 1;
 169   2              P2_4 = 0;
 170   2              P2_5 = 0;
 171   2              delay(1);
 172   2          }
 173   1          if (flagUp) {
 174   2              P2_3 = 0;
 175   2              P2_4 = 1;
 176   2              P2_5 = 0;
C51 COMPILER V9.54   MAIN                                                                  04/30/2021 17:52:46 PAGE 4   

 177   2              delay(1);
 178   2          }
 179   1          if (flagDown) {
 180   2              P2_3 = 1;
 181   2              P2_4 = 1;
 182   2              P2_5 = 0;
 183   2              delay(1);
 184   2          }
 185   1          P2_5 = 1;
 186   1      }
 187          
 188          int hasUpRequest(int request, int floor) {
 189   1          return request >> floor;
 190   1      }
 191          
 192          int hasDownRequest(int request, int floor) {
 193   1          return request & (~((request >> (floor - 1)) << (floor - 1)));
 194   1      }
 195          
 196          int most(int x) {
 197   1          // binary search
 198   1          int res;
 199   1          unsigned y;
 200   1          int n = 32;
 201   1          y = x >> 16;
 202   1          if (y != 0) {
 203   2              n = n - 16;
 204   2              x = y;
 205   2          }
 206   1          y = x >> 8;
 207   1          if (y != 0) {
 208   2              n = n - 8;
 209   2              x = y;
 210   2          }
 211   1          y = x >> 4;
 212   1          if (y != 0) {
 213   2              n = n - 4;
 214   2              x = y;
 215   2          }
 216   1          y = x >> 2;
 217   1          if (y != 0) {
 218   2              n = n - 2;
 219   2              x = y;
 220   2          }
 221   1          y = x >> 1;
 222   1          if (y != 0) res = n - 2;
 223   1          res = n - x;
 224   1          return 32 - res;
 225   1      }
 226          
 227          int least(int x) {
 228   1          // binary search
 229   1          int n;
 230   1          if (x == 0) return 0;
 231   1          n = 1;
 232   1          if ((x & 0x0000FFFF) == 0) {
 233   2              n = n + 16;
 234   2              x = x >> 16;
 235   2          }
 236   1          if ((x & 0x000000FF) == 0) {
 237   2              n = n + 8;
 238   2              x = x >> 8;
C51 COMPILER V9.54   MAIN                                                                  04/30/2021 17:52:46 PAGE 5   

 239   2          }
 240   1          if ((x & 0x0000000F) == 0) {
 241   2              n = n + 4;
 242   2              x = x >> 4;
 243   2          }
 244   1          if ((x & 0x00000003) == 0) {
 245   2              n = n + 2;
 246   2              x = x >> 2;
 247   2          }
 248   1          return n - (x & 1) + 1;
 249   1      }
 250          
 251          int setBit(int num, int pos) {
 252   1          num |= (1 << (pos - 1));
 253   1          return num;
 254   1      }
 255          
 256          int clearBit(int num, int pos) {
 257   1          num &= ~(1 << (pos - 1));
 258   1          return num;
 259   1      }
 260          
 261          void elevatorSche() {
 262   1          if (leftElev.status == STILL) {
 263   2              if (rightElev.status == STILL) {
 264   3                  // ÈùôÊ≠¢ÔºåÈùôÊ≠¢
 265   3                  // ‰ºòÂÖàÂìçÂ∫îÊù•Ëá™ÂÜÖÈÉ®ÁöÑËØ∑Ê±Ç
 266   3                  if (clearBit(el, leftElev.floor) != 0) {       // Â¶ÇÊûúÂ∑¶ËæπÊúâÂÜÖÈÉ®ËØ∑Ê±Ç
 267   4                      if (hasUpRequest(el, leftElev.floor)) {
 268   5                          leftElev.status = UP;
 269   5                          leftElev.floor++;
 270   5                      } else if (hasDownRequest(el, leftElev.floor)) {
 271   5                          leftElev.status = DOWN;
 272   5                          leftElev.floor--;
 273   5                      }
 274   4                  }
 275   3                  if (clearBit(er, rightElev.floor != 0))       // Â¶ÇÊûúÂè≥ËæπÊúâÂÜÖÈÉ®ËØ∑Ê±Ç
 276   3                  {
 277   4                      if (hasUpRequest(er, rightElev.floor)) {
 278   5                          rightElev.status = UP;
 279   5                          rightElev.floor++;
 280   5                      } else if (hasDownRequest(er, rightElev.floor)) {
 281   5                          rightElev.status = DOWN;
 282   5                          rightElev.floor--;
 283   5                      }
 284   4                  }
 285   3                  if (leftElev.status == STILL || rightElev.floor == STILL) {         // Â¶ÇÊûú‰∏§‰∏™Ê≤°ÊúâÈÉΩË¢
             -´dispatchÔºåÂ∞ùËØïÂìçÂ∫îupÂíådown
 286   4                      if (leftElev.status == STILL) {         // Â¶ÇÊûúÊòØÂ∑¶ËæπÊ≤°ÊúâË¢´dispatch
 287   5                          if (clearBit(up, leftElev.floor) != 0) {    // Â∞ùËØïÂìçÂ∫îup
 288   6                              if (hasUpRequest(up, leftElev.floor)) {
 289   7                                  leftElev.status = UP;
 290   7                                  leftElev.floor++;
 291   7                              } else if (hasDownRequest(up, leftElev.floor)) {
 292   7                                  leftElev.status = DOWN;
 293   7                                  leftElev.floor--;
 294   7                              }
 295   6                          } else if (clearBit(down, leftElev.floor) != 0) {  // Â∞ùËØïÂìçÂ∫îdown
 296   6                              if (hasUpRequest(down, leftElev.floor)) {
 297   7                                  leftElev.status = UP;
 298   7                                  leftElev.floor++;
 299   7                              } else if (hasDownRequest(down, leftElev.floor)) {
C51 COMPILER V9.54   MAIN                                                                  04/30/2021 17:52:46 PAGE 6   

 300   7                                  leftElev.status = DOWN;
 301   7                                  leftElev.floor--;
 302   7                              }
 303   6                          }
 304   5                      } else {                              // Â¶ÇÊûúÊòØÂè≥ËæπÊ≤°ÊúâË¢´dispatch
 305   5                          if (clearBit(up, rightElev.floor) != 0) {   // Â∞ùËØïÂìçÂ∫îup
 306   6                              if (hasUpRequest(up, rightElev.floor)) {
 307   7                                  rightElev.status = UP;
 308   7                                  rightElev.floor++;
 309   7                              } else if (hasDownRequest(up, rightElev.floor)) {
 310   7                                  rightElev.status = DOWN;
 311   7                                  rightElev.floor--;
 312   7                              }
 313   6                          } else if (clearBit(down, rightElev.floor) != 0) {   // Â∞ùËØïÂìçÂ∫îdown
 314   6                              if (hasUpRequest(down, rightElev.floor)) {
 315   7                                  rightElev.status = UP;
 316   7                                  rightElev.floor++;
 317   7                              } else if (hasDownRequest(down, rightElev.floor)) {
 318   7                                  rightElev.status = DOWN;
 319   7                                  rightElev.floor--;
 320   7                              }
 321   6                          }
 322   5                      }
 323   4                  }
 324   3              } else if (rightElev.status == UP) {
 325   3                  // ÈùôÊ≠¢ÔºåÂêë‰∏ä
 326   3                  if (clearBit(el, leftElev.floor) != 0) {       // Â¶ÇÊûúÂ∑¶ËæπÁöÑÊúâÂÜÖÈÉ®ËØ∑Ê±ÇÔºåÂìçÂ∫î
 327   4                      if (hasUpRequest(el, leftElev.floor)) {
 328   5                          leftElev.status = UP;
 329   5                          leftElev.floor++;
 330   5                      } else if (hasDownRequest(el, leftElev.floor)) {
 331   5                          leftElev.status = DOWN;
 332   5                          leftElev.floor--;
 333   5                      }
 334   4                  } else if (clearBit(up, leftElev.floor) != 0 || clearBit(down, leftElev.floor) != 0) {   // Â¶
             -ÇÊûúÊ≤°ÊúâÔºåÂ∞ùËØïÂìçÂ∫îÂ§ñÈÉ®ËØ∑Ê±Ç
 335   4                      if (hasUpRequest(up, leftElev.floor) || hasUpRequest(down, leftElev.floor)) {   // Â§ñÈÉ®Ë
             -Ø∑Ê±ÇÊúâÂêë‰∏äÁöÑ
 336   5                          leftElev.status = UP;
 337   5                          leftElev.floor++;
 338   5                      } else {      // Â§ñÈÉ®ËØ∑Ê±ÇÊúâÂêë‰∏ãÁöÑ
 339   5                          leftElev.status = DOWN;
 340   5                          leftElev.floor++;
 341   5                      }
 342   4                  }
 343   3      
 344   3                  if (hasUpRequest(up, rightElev.floor) || hasUpRequest(er, rightElev.floor)) {   // Â¶ÇÊûúËøòÂ≠
             -òÂú®‰∏äÈÉ®ÁöÑËØ∑Ê±ÇÔºåÁªßÁª≠‰∏äÂçá
 345   4                      rightElev.floor++;
 346   4                  } else if (hasDownRequest(down, rightElev.floor) ||
 347   3                             hasDownRequest(er, rightElev.floor)) {   // Âê¶ÂàôÔºåÊ£ÄÊü•ÊòØÂê¶Â≠òÂú®‰∏ãÊñπËØ∑Ê±Ç
 348   4                      rightElev.status = DOWN;
 349   4                      rightElev.floor--;
 350   4                  } else {  // ÈÉΩÊ≤°ÊúâÔºåÁõ¥Êé•ÈùôÁΩÆÂè≥ËæπÁîµÊ¢Ø
 351   4                      rightElev.status = STILL;
 352   4                  }
 353   3              } else {
 354   3                  // ÈùôÊ≠¢ÔºåÂêë‰∏ã
 355   3                  if (clearBit(el, leftElev.floor) != 0) {       // Â¶ÇÊûúÂ∑¶ËæπÁöÑÊúâÂÜÖÈÉ®ËØ∑Ê±ÇÔºåÂìçÂ∫î
 356   4                      if (hasUpRequest(el, leftElev.floor)) {
 357   5                          leftElev.status = UP;
 358   5                          leftElev.floor++;
C51 COMPILER V9.54   MAIN                                                                  04/30/2021 17:52:46 PAGE 7   

 359   5                      } else if (hasDownRequest(el, leftElev.floor)) {
 360   5                          leftElev.status = DOWN;
 361   5                          leftElev.floor--;
 362   5                      }
 363   4                  } else if (clearBit(up, leftElev.floor) != 0 || clearBit(down, leftElev.floor) != 0) {   // Â¶
             -ÇÊûúÊ≤°ÊúâÔºåÂ∞ùËØïÂìçÂ∫îÂ§ñÈÉ®ËØ∑Ê±Ç
 364   4                      if (hasUpRequest(up, leftElev.floor) || hasUpRequest(down, leftElev.floor)) {   // Â§ñÈÉ®Ë
             -Ø∑Ê±ÇÊúâÂêë‰∏äÁöÑ
 365   5                          leftElev.status = UP;
 366   5                          leftElev.floor++;
 367   5                      } else {      // Â§ñÈÉ®ËØ∑Ê±ÇÊúâÂêë‰∏ãÁöÑ
 368   5                          leftElev.status = DOWN;
 369   5                          leftElev.floor++;
 370   5                      }
 371   4                  }
 372   3      
 373   3                  if (hasDownRequest(down, rightElev.floor) || hasDownRequest(er, rightElev.floor)) {   // Â¶ÇÊû
             -úËøòÂ≠òÂú®Âêë‰∏ãÁöÑËØ∑Ê±ÇÔºåÁªßÁª≠‰∏ãÈôç
 374   4                      rightElev.floor--;
 375   4                  } else if (hasUpRequest(up, rightElev.floor) || hasUpRequest(er, rightElev.floor)) {   // Âê¶Â
             -àôÔºåÊ£ÄÊü•ÊòØÂê¶Â≠òÂú®‰∏äÊñπËØ∑Ê±Ç
 376   4                      rightElev.status = UP;
 377   4                      rightElev.floor++;
 378   4                  } else {  // ÈÉΩÊ≤°ÊúâÔºåÈùôÁΩÆÂè≥ËæπÁîµÊ¢Ø
 379   4                      rightElev.status = STILL;
 380   4                  }
 381   3              }
 382   2          } else if (leftElev.status == UP) {
 383   2              if (rightElev.status == STILL) {
 384   3                  // Âêë‰∏äÔºåÈùôÊ≠¢
 385   3                  if (clearBit(er, rightElev.floor) != 0) {  // ÈùôÊ≠¢ÁöÑ‰ºòÂÖàÂìçÂ∫îÂÜÖÈÉ®ËØ∑Ê±Ç
 386   4                      if (hasUpRequest(er, rightElev.floor)) {
 387   5                          rightElev.status = UP;
 388   5                          rightElev.floor++;
 389   5                      } else if (hasDownRequest(er, rightElev.floor)) {
 390   5                          rightElev.status = DOWN;
 391   5                          rightElev.floor--;
 392   5                      }
 393   4                  } else if (clearBit(up, rightElev.floor) != 0 || clearBit(down, rightElev.floor) != 0) {   // 
             -ÂÜÖÈÉ®Êó†ËØ∑Ê±ÇÔºåÂìçÂ∫îÂ§ñÈÉ®ËØ∑Ê±Ç
 394   4                      if (hasUpRequest(up, rightElev.floor) || hasUpRequest(down, rightElev.floor)) {
 395   5                          rightElev.status = UP;
 396   5                          rightElev.floor++;
 397   5                      } else {
 398   5                          rightElev.status = DOWN;
 399   5                          rightElev.floor--;
 400   5                      }
 401   4                  }
 402   3      
 403   3                  if (hasUpRequest(up, leftElev.floor) || hasUpRequest(el, leftElev.floor)) {  // Â¶ÇÊûúÂêë‰∏äÁö
             -ÑÁîµÊ¢ØÂú®‰∏äÊñπËøòÊúâÂêë‰∏äÁöÑËØ∑Ê±ÇÔºåÁªßÁª≠Âêë‰∏ä
 404   4                      leftElev.floor++;
 405   4                  } else if (hasDownRequest(el, leftElev.floor) || hasDownRequest(down, leftElev.floor)) { // Â¶
             -ÇÊûúÊ≤°ÊúâÔºåÊ£ÄÊü•Âêë‰∏ãÁöÑËØ∑Ê±Ç
 406   4                      leftElev.status = DOWN;
 407   4                      leftElev.floor--;
 408   4                  } else {  // Â¶ÇÊûú‰πüÊ≤°ÊúâÔºåÁõ¥Êé•ËÆæÁΩÆ‰ΩçÈùôÊ≠¢
 409   4                      leftElev.status = STILL;
 410   4                  }
 411   3              } else if (rightElev.status == UP) {
 412   3                  // Âêë‰∏äÔºå Âêë‰∏ä
 413   3                  if (hasUpRequest(el, leftElev.floor) || hasUpRequest(up, leftElev.floor)) {
C51 COMPILER V9.54   MAIN                                                                  04/30/2021 17:52:46 PAGE 8   

 414   4                      leftElev.floor++;
 415   4                  } else if (hasDownRequest(el, leftElev.floor) || hasDownRequest(down, leftElev.floor)) {
 416   4                      leftElev.status = DOWN;
 417   4                      leftElev.floor--;
 418   4                  } else {
 419   4                      leftElev.status = STILL;
 420   4                  }
 421   3      
 422   3                  if (hasUpRequest(er, rightElev.floor) || hasUpRequest(up, rightElev.floor)) {
 423   4                      rightElev.floor++;
 424   4                  } else if (hasDownRequest(er, rightElev.floor) || hasDownRequest(down, rightElev.floor)) {
 425   4                      rightElev.status = DOWN;
 426   4                      rightElev.floor--;
 427   4                  } else {
 428   4                      rightElev.status = STILL;
 429   4                  }
 430   3              } else {
 431   3                  // Âêë‰∏äÔºåÂêë‰∏ã
 432   3                  if (hasUpRequest(el, leftElev.floor) || hasUpRequest(up, leftElev.floor)) {  // Â¶ÇÊûúÂ∑¶ËæπÁî
             -µÊ¢ØÊúâÂêë‰∏äËØ∑Ê±ÇÔºåÁªßÁª≠Âêë‰∏ä
 433   4                      leftElev.floor++;
 434   4                  } else if (hasDownRequest(el, leftElev.floor) || hasDownRequest(down, leftElev.floor)) { // Â¶
             -ÇÊûúÊ≤°ÊúâÔºåÊ£ÄÊü•Âêë‰∏ãÁöÑËØ∑Ê±Ç
 435   4                      leftElev.status = DOWN;
 436   4                      leftElev.floor--;
 437   4                  } else {  // Âê¶ÂàôÔºåÈùôÊ≠¢Â∑¶ËæπÁîµÊ¢Ø
 438   4                      leftElev.status = STILL;
 439   4                  }
 440   3      
 441   3                  if (hasDownRequest(er, rightElev.floor) || hasDownRequest(down, rightElev.floor)) { // Â¶ÇÊûúÂ
             -è≥ËæπÁîµÊ¢ØÊúâÂêë‰∏ãËØ∑Ê±ÇÔºåÁªßÁª≠Âêë‰∏ã
 442   4                      rightElev.floor--;
 443   4                  } else if (hasUpRequest(up, rightElev.floor) || hasUpRequest(er, rightElev.floor)) { // Â¶ÇÊûú
             -Ê≤°ÊúâÔºåÊ£ÄÊü•Âêë‰∏äÁöÑËØ∑Ê±Ç
 444   4                      rightElev.status = UP;
 445   4                      rightElev.floor++;
 446   4                  } else {  // Âê¶ÂàôÔºåÈùôÊ≠¢Âè≥ËæπÁîµÊ¢Ø
 447   4                      rightElev.status = STILL;
 448   4                  }
 449   3              }
 450   2      
 451   2          } else {
 452   2              if (rightElev.status == STILL) {
 453   3                  // Âêë‰∏ãÔºåÈùôÊ≠¢
 454   3                  if (clearBit(er, rightElev.floor) != 0) {
 455   4                      if (hasUpRequest(er, rightElev.floor)) {
 456   5                          rightElev.status = UP;
 457   5                          rightElev.floor++;
 458   5                      } else if (hasDownRequest(er, rightElev.floor)) {
 459   5                          rightElev.status = DOWN;
 460   5                          rightElev.floor--;
 461   5                      }
 462   4                  } else if (clearBit(up, rightElev.floor) != 0 || clearBit(down, rightElev.floor) != 0) {
 463   4                      if (hasUpRequest(up, rightElev.floor) || hasUpRequest(down, rightElev.floor)) {
 464   5                          rightElev.status = UP;
 465   5                          rightElev.floor++;
 466   5                      } else {
 467   5                          rightElev.status = DOWN;
 468   5                          rightElev.floor--;
 469   5                      }
 470   4                  }
 471   3      
C51 COMPILER V9.54   MAIN                                                                  04/30/2021 17:52:46 PAGE 9   

 472   3                  if (hasDownRequest(el, leftElev.floor) || hasDownRequest(down, leftElev.floor)) {
 473   4                      leftElev.floor--;
 474   4                  } else if (hasUpRequest(el, leftElev.floor) || hasUpRequest(up, leftElev.floor)) {
 475   4                      leftElev.status = UP;
 476   4                      leftElev.floor++;
 477   4                  } else {
 478   4                      leftElev.status = STILL;
 479   4                  }
 480   3              } else if (rightElev.status == UP) {
 481   3                  // Âêë‰∏ãÔºå Âêë‰∏ä
 482   3                  if (hasDownRequest(el, leftElev.floor) || hasDownRequest(down, leftElev.floor)) {
 483   4                      leftElev.floor--;
 484   4                  } else if (hasUpRequest(el, leftElev.floor) || hasUpRequest(up, leftElev.floor)) {
 485   4                      leftElev.status = UP;
 486   4                      leftElev.floor++;
 487   4                  } else {
 488   4                      leftElev.floor = STILL;
 489   4                  }
 490   3      
 491   3                  if (hasUpRequest(er, rightElev.floor) || hasUpRequest(up, rightElev.floor)) {
 492   4                      rightElev.floor++;
 493   4                  } else if (hasDownRequest(er, rightElev.floor) || hasDownRequest(down, rightElev.floor)) {
 494   4                      rightElev.status = DOWN;
 495   4                      rightElev.floor--;
 496   4                  } else {
 497   4                      rightElev.status = STILL;
 498   4                  }
 499   3              } else {
 500   3                  // Âêë‰∏ãÔºåÂêë‰∏ã
 501   3                  if (hasDownRequest(el, leftElev.floor) || hasDownRequest(down, leftElev.floor)) {
 502   4                      leftElev.floor--;
 503   4                  } else if (hasUpRequest(el, leftElev.floor) || hasUpRequest(up, leftElev.floor)) {
 504   4                      leftElev.status = UP;
 505   4                      leftElev.floor++;
 506   4                  } else {
 507   4                      leftElev.status = STILL;
 508   4                  }
 509   3      
 510   3                  if (hasDownRequest(er, rightElev.floor) || hasDownRequest(down, rightElev.floor)) {
 511   4                      rightElev.floor--;
 512   4                  } else if (hasUpRequest(er, rightElev.floor) || hasUpRequest(up, rightElev.floor)) {
 513   4                      rightElev.status = UP;
 514   4                      rightElev.floor++;
 515   4                  } else {
 516   4                      rightElev.status = STILL;
 517   4                  }
 518   3      
 519   3              }
 520   2          }
 521   1      
 522   1          // Êõ¥Êñ∞LCDÊòæÁ§∫Âô®ÂíåÊåáÁ§∫ÁÅØ
 523   1          updateIndicators();
 524   1          showElevStatus();
 525   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3334    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       7
C51 COMPILER V9.54   MAIN                                                                  04/30/2021 17:52:46 PAGE 10  

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
